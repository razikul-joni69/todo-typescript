{"version":3,"sources":["components/MyTodos.tsx","components/AddTodo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MyTodos","todo","time","handleRemove","className","onClick","AddTodo","useState","newTodo","setNewTodo","todos","setTodos","onChange","e","target","name","value","updatedTodos","filter","t","type","id","placeholder","alert","map","con","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAwBeA,EAlBC,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAA+C,IAAzCC,YAAyC,MAAlC,MAAkC,EAA3BC,EAA2B,EAA3BA,aACnC,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,OAAf,UACI,+BACI,4CADJ,IAC6BH,KAE7B,+BACI,4CADJ,IAC6BC,KAE7B,wBAAQE,UAAU,MAAMC,QAAS,kBAAMF,EAAaF,IAApD,wBCmDDK,EA7DC,WAAO,IAAD,EACYC,mBAAgB,IAD5B,mBACXC,EADW,KACFC,EADE,OAEQF,mBAAkB,IAF1B,mBAEXG,EAFW,KAEJC,EAFI,KAeZC,EAAW,SAACC,GAAD,OACbJ,EAAW,2BAAKD,GAAN,kBAAgBK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAEjDb,EAAe,SAACF,GAClB,IAAMgB,EAAeP,EAAMQ,QAAO,SAACC,GAAD,OAAOA,EAAElB,OAASA,KACpDU,EAASM,IAGb,OACI,sBAAKb,UAAU,YAAf,UACI,kEACA,gCACI,uBACIY,MAAOR,EAAQP,KACfW,SAAUA,EACVQ,KAAK,OACLL,KAAK,OACLM,GAAG,GACHC,YAAY,yBACb,IACH,uBACA,uBACIN,MAAOR,EAAQN,KACfU,SAAUA,EACVQ,KAAK,OACLL,KAAK,OACLM,GAAG,GACHC,YAAY,yBACb,IACH,uBACA,wBAAQlB,UAAU,MAAMC,QAzChB,WACK,KAAjBG,EAAQP,MACRU,EAAS,GAAD,mBAAKD,GAAL,CAAYF,KACpBC,EAAW,CACPR,KAAM,GACNC,KAAM,MAGVqB,MAAM,2BAiCF,oBAIHb,EAAMc,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,CAEIxB,KAAMwB,EAAIxB,KACVC,KAAMuB,EAAIvB,KACVC,aAAcA,GAHTsB,EAAIxB,aC7CdyB,MARf,WACI,OACI,qBAAKtB,UAAU,MAAf,SACI,cAAC,EAAD,OCOGuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6ca39d87.chunk.js","sourcesContent":["import React from \"react\";\r\ninterface IProps {\r\n    todo: string;\r\n    time?: string;\r\n    handleRemove: (todo: string) => void;\r\n}\r\nconst MyTodos = ({ todo, time = \"N/A\", handleRemove }: IProps) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <div className=\"card\">\r\n                <h3>\r\n                    <strong>Todo :</strong> {todo}\r\n                </h3>\r\n                <h3>\r\n                    <strong>Time :</strong> {time}\r\n                </h3>\r\n                <button className=\"btn\" onClick={() => handleRemove(todo)}>\r\n                    Done\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyTodos;\r\n","import React, { useState } from \"react\";\r\nimport MyTodos from \"./MyTodos\";\r\ninterface ITodo {\r\n    todo: string;\r\n    time?: string;\r\n}\r\nconst AddTodo = () => {\r\n    const [newTodo, setNewTodo] = useState<ITodo>({} as ITodo);\r\n    const [todos, setTodos] = useState<ITodo[]>([]);\r\n\r\n    const handleClick = () => {\r\n        if (newTodo.todo !== \"\") {\r\n            setTodos([...todos, newTodo]);\r\n            setNewTodo({\r\n                todo: \"\",\r\n                time: \"\",\r\n            });\r\n        } else {\r\n            alert(\"Please Enter something\");\r\n        }\r\n    };\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n        setNewTodo({ ...newTodo, [e.target.name]: e.target.value });\r\n\r\n    const handleRemove = (todo: string) => {\r\n        const updatedTodos = todos.filter((t) => t.todo !== todo);\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Add your tod's here ðŸš®</h1>\r\n            <div>\r\n                <input\r\n                    value={newTodo.todo}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    name=\"todo\"\r\n                    id=\"\"\r\n                    placeholder=\"Add your todo's here\"\r\n                />{\" \"}\r\n                <br />\r\n                <input\r\n                    value={newTodo.time}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    name=\"time\"\r\n                    id=\"\"\r\n                    placeholder=\"Add your todo's here\"\r\n                />{\" \"}\r\n                <br />\r\n                <button className=\"btn\" onClick={handleClick}>\r\n                    Add\r\n                </button>\r\n            </div>\r\n            {todos.map((con) => (\r\n                <MyTodos\r\n                    key={con.todo}\r\n                    todo={con.todo}\r\n                    time={con.time}\r\n                    handleRemove={handleRemove}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport AddTodo from \"./components/AddTodo\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <AddTodo />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}